/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import Clases.ClsConexion;
import static Clases.ClsSonidos.hilo;
import Clases.ClsSonidos;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Will Vasquez
 */
public class FrmBaseDatos extends javax.swing.JDialog {

    /**
     * Creates new form FrmBaseDatos
     * @param parent
     * @param modal
     */
    public FrmBaseDatos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Control de base de datos");
        ((JPanel)getContentPane()).setOpaque(false); 
        ImageIcon uno=new ImageIcon(this.getClass().getResource("/Diseño/BaseDatos.jpg")); 
        JLabel fondo= new JLabel(); fondo.setIcon(uno); 
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER); 
        fondo.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight());
        FileFilter FiltroBackup = new FileNameExtensionFilter("Respaldo SQL","bak");
        FileChooserAbrir.setFileFilter(FiltroBackup);
        FileChooserGuardar.setFileFilter(FiltroBackup);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooserAbrir = new javax.swing.JFileChooser();
        FileChooserGuardar = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        BtnCrear = new javax.swing.JButton();
        BtnRestaurar = new javax.swing.JButton();
        BtnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true), "¿Que desea hacer?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 10), java.awt.Color.white)); // NOI18N
        jPanel1.setOpaque(false);

        BtnCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/CrearBackup.png"))); // NOI18N
        BtnCrear.setText("Crear Backup");
        BtnCrear.setFocusable(false);
        BtnCrear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnCrear.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        BtnCrear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCrearActionPerformed(evt);
            }
        });

        BtnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/RestaurarBackup.png"))); // NOI18N
        BtnRestaurar.setText("Restaurar Backup");
        BtnRestaurar.setFocusable(false);
        BtnRestaurar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnRestaurar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        BtnRestaurar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRestaurarActionPerformed(evt);
            }
        });

        BtnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/EliminarDatos.png"))); // NOI18N
        BtnEliminar.setText("Eliminar datos");
        BtnEliminar.setFocusable(false);
        BtnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnEliminar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        BtnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnCrear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnRestaurar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnRestaurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnCrear)
                    .addComponent(BtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCrearActionPerformed
        int ArchivoAbierto;
        ArchivoAbierto = FileChooserGuardar.showOpenDialog(this);
        if (ArchivoAbierto == JFileChooser.APPROVE_OPTION) {
            try {
                File ArchivoSeleccionado = new File(FileChooserGuardar.getSelectedFile().getCanonicalPath() + "." + ((FileNameExtensionFilter) FileChooserGuardar.getFileFilter()).getExtensions()[0]);
                String ruta = ArchivoSeleccionado.getAbsolutePath();
                if ((String.valueOf(ruta.charAt(0)) + String.valueOf(ruta.charAt(1))).equals("C:")) {
                    JOptionPane.showMessageDialog(this, "¡No se creó el backup de la base de datos!\nNo se puede crear un backup en la unidad C.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                else{
                    PreparedStatement st = cn.prepareStatement("BACKUP DATABASE EasyParkingDB TO DISK = ? with FORMAT");
                    st.setString(1, ruta);
                    st.executeUpdate();
                    cn.close();
                }
            } catch (IOException | HeadlessException | SQLException e) {JOptionPane.showMessageDialog(this, e, "ERROR", JOptionPane.ERROR_MESSAGE);}
        }
        else {
            JOptionPane.showMessageDialog(this, "¡No se creó el backup de la base de datos!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnCrearActionPerformed

    private void BtnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRestaurarActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Perderá toda la información actual, ¿Está seguro?", "AVISO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            int ArchivoAbierto;
            ArchivoAbierto = FileChooserAbrir.showOpenDialog(this);
            if (ArchivoAbierto == JFileChooser.APPROVE_OPTION) {
                try {
                    File ArchivoSeleccionado = FileChooserAbrir.getSelectedFile();
                    String ruta = ArchivoSeleccionado.getAbsolutePath();
                    cn = new ClsConexion().conectar2();
                    PreparedStatement st = cn.prepareStatement("use master; alter database EasyParkingDB set single_user with rollback immediate; RESTORE DATABASE EasyParkingDB FROM DISK = ?;");
                    st.setString(1, ruta);
                    st.executeUpdate();
                    st = cn.prepareStatement("use master; alter database EasyParkingDB set multi_user with rollback immediate;");
                    st.executeUpdate();
                    JOptionPane.showMessageDialog(this, "¡Se va a cerrar la aplicación!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                    cn.close();
                    System.exit(0);
                } catch (SQLException | HeadlessException e) {JOptionPane.showMessageDialog(this, e, "ERROR", JOptionPane.ERROR_MESSAGE);}
            }
            else{
                JOptionPane.showMessageDialog(this, "¡No se restauró el backup de la base de datos!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BtnRestaurarActionPerformed

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        hilo.stop();
        ClsSonidos.EliminarBase();
        if (JOptionPane.showConfirmDialog(null, "Perderá toda la información actual, ¿Está seguro?", "AVISO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
            cn = new ClsConexion().conectar2();
            PreparedStatement st = cn.prepareStatement("use master; alter database EasyParkingDB set single_user with rollback immediate; DROP DATABASE EasyParkingDB");
            st.executeUpdate();
            JOptionPane.showMessageDialog(this, "¡Se va a cerrar la aplicación!", "AVISO", JOptionPane.INFORMATION_MESSAGE);
            cn.close();
            System.exit(0);
            }catch(SQLException | HeadlessException e){JOptionPane.showMessageDialog(this, e, "ERROR", JOptionPane.ERROR_MESSAGE);}
        }
        else{
            hilo.stop();
            ClsSonidos.FrmBase();
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            ClsSonidos.FrmBase();
            Thread.sleep(1000);
            JOptionPane.showMessageDialog(this, "Le pedimos que use este formulario con extrema precaución, de lo contrario perdera todos sus datos", "IMPORTANTE", JOptionPane.INFORMATION_MESSAGE);
        } catch (InterruptedException ex) {
            Logger.getLogger(FrmBaseDatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        hilo.stop();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBaseDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBaseDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBaseDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBaseDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmBaseDatos dialog = new FrmBaseDatos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCrear;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnRestaurar;
    private javax.swing.JFileChooser FileChooserAbrir;
    private javax.swing.JFileChooser FileChooserGuardar;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
ClsConexion cc= new ClsConexion();
Connection cn= cc.conectar();
}
