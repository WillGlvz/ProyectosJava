/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import AppPackage.AnimationClass;
import static Clases.ClsArduino.salida;
import Clases.ClsConexion;
import Clases.ClsSQLQuery;
import gnu.io.CommPortIdentifier;
import gnu.io.PortInUseException;
import gnu.io.SerialPort;
import gnu.io.UnsupportedCommOperationException;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.sql.*;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JMenu;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Will Vasquez
 */
public final class FrmPrincipal extends javax.swing.JFrame {
    AnimationClass AC = new AnimationClass();
    private static SerialPort PuertoSerie;
    private static final String puerto = "COM3";
    private static final int TimeOut = 2000;
    private static final int DateRate = 9600;
    public static JMenu jMenu5 = new javax.swing.JMenu();
    public static JMenu jMenu6 = new javax.swing.JMenu();
    public static JMenu jMenu7 = new javax.swing.JMenu();
    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Diseño/Icono.png"));
        setIconImage(icon);
        ((JPanel)getContentPane()).setOpaque(false); 
        ImageIcon uno=new ImageIcon(this.getClass().getResource("/Diseño/Principal2.jpg")); 
        JLabel fondo= new JLabel(); fondo.setIcon(uno); 
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER); 
        fondo.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight());
        ClsSQLQuery obj = new ClsSQLQuery();
        if(obj.ConsultarIdioma()){
            if(obj.getIdioma() == 1){
                IdiomaEspañol();
                FrmPrincipal.BarraMenu.remove(jMenu5);
                FrmPrincipal.BarraMenu.remove(jMenu6);
                FrmPrincipal.BarraMenu.remove(jMenu7);
            }
            else{
                IdiomaEnglish();
                jMenu5.setBackground(new java.awt.Color(0, 0, 0));
                jMenu5.setText(" ᅝᅝᅝ");
                jMenu5.setOpaque(true);
                FrmPrincipal.BarraMenu.add(jMenu5);
                jMenu6.setBackground(new java.awt.Color(0, 0, 0));
                jMenu6.setText(" ᅝᅝᅝ");
                jMenu6.setOpaque(true);
                FrmPrincipal.BarraMenu.add(jMenu6);
                jMenu7.setBackground(new java.awt.Color(0, 0, 0));
                jMenu7.setText(" ᅝᅝᅝ");
                jMenu7.setOpaque(true);
                FrmPrincipal.BarraMenu.add(jMenu7);
            }
        }
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuEmergente = new javax.swing.JPopupMenu();
        MenuSesion2 = new javax.swing.JMenuItem();
        MenuMinimizar = new javax.swing.JMenuItem();
        MenuSalir2 = new javax.swing.JMenuItem();
        lblfondo = new javax.swing.JLabel();
        lblfondo1 = new javax.swing.JLabel();
        BarraMenu = new javax.swing.JMenuBar();
        MenuUsuarios = new javax.swing.JMenu();
        MenuTipoUsuario = new javax.swing.JMenuItem();
        MenuUsuarios2 = new javax.swing.JMenuItem();
        MenuContraseña = new javax.swing.JMenuItem();
        MenuGeneral = new javax.swing.JMenu();
        MenuDatos = new javax.swing.JMenuItem();
        MenuTarifas = new javax.swing.JMenuItem();
        MenuVigilancia = new javax.swing.JMenuItem();
        MenuNuevoVehiculo = new javax.swing.JMenuItem();
        MenuParqueo = new javax.swing.JMenu();
        MenuPuestos = new javax.swing.JMenuItem();
        MenuParquear = new javax.swing.JMenuItem();
        MenuRetirar = new javax.swing.JMenuItem();
        MenuAlquiler = new javax.swing.JMenu();
        MenuContaduria = new javax.swing.JMenu();
        MenuGanancia = new javax.swing.JMenuItem();
        MenuReportes = new javax.swing.JMenu();
        MenuUsuarios3 = new javax.swing.JMenu();
        MenuUsuarios4 = new javax.swing.JMenuItem();
        MenuTipoUsuarios2 = new javax.swing.JMenuItem();
        MenuHistorial = new javax.swing.JMenuItem();
        MenuClientes = new javax.swing.JMenu();
        MenuClientes2 = new javax.swing.JMenuItem();
        MenuClientes3 = new javax.swing.JMenuItem();
        MenuVehiculos = new javax.swing.JMenu();
        MenuIngresados = new javax.swing.JMenuItem();
        MenuRetirados = new javax.swing.JMenuItem();
        MenuVIP = new javax.swing.JMenuItem();
        MenuMoto = new javax.swing.JMenuItem();
        MenuTipoVehiculos = new javax.swing.JMenuItem();
        MenuFinanzas = new javax.swing.JMenu();
        MenuTotal = new javax.swing.JMenuItem();
        MenuTotal2 = new javax.swing.JMenuItem();
        MenuInterfaz = new javax.swing.JMenu();
        MenuArduino = new javax.swing.JMenuItem();
        MenuBaseDatos = new javax.swing.JMenu();
        MenuAyuda = new javax.swing.JMenu();
        MenuAutores = new javax.swing.JMenuItem();
        MenuReporte = new javax.swing.JMenuItem();
        MenuMusica = new javax.swing.JMenuItem();
        MenuIdioma = new javax.swing.JMenuItem();
        MenuServidor = new javax.swing.JMenuItem();
        MenuCliente = new javax.swing.JMenuItem();
        MenuSesion = new javax.swing.JMenu();
        MenuSalir = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        MenuSesion2.setText("Cerrar sesión");
        MenuSesion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSesion2ActionPerformed(evt);
            }
        });
        MenuEmergente.add(MenuSesion2);

        MenuMinimizar.setText("Minimizar");
        MenuMinimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMinimizarActionPerformed(evt);
            }
        });
        MenuEmergente.add(MenuMinimizar);

        MenuSalir2.setText("Salir");
        MenuSalir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSalir2ActionPerformed(evt);
            }
        });
        MenuEmergente.add(MenuSalir2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        lblfondo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Principal.jpg"))); // NOI18N
        lblfondo.setOpaque(true);
        getContentPane().add(lblfondo);
        lblfondo.setBounds(1366, 0, 1366, 768);

        lblfondo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblfondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Principal2.jpg"))); // NOI18N
        lblfondo1.setOpaque(true);
        lblfondo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblfondo1MouseClicked(evt);
            }
        });
        getContentPane().add(lblfondo1);
        lblfondo1.setBounds(0, 0, 1366, 768);

        BarraMenu.setBackground(new java.awt.Color(0, 0, 0));
        BarraMenu.setBorder(null);
        BarraMenu.setForeground(new java.awt.Color(255, 255, 255));
        BarraMenu.setBorderPainted(false);
        BarraMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BarraMenu.setOpaque(false);

        MenuUsuarios.setBackground(new java.awt.Color(0, 0, 0));
        MenuUsuarios.setForeground(new java.awt.Color(255, 255, 255));
        MenuUsuarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Usuarios.png"))); // NOI18N
        MenuUsuarios.setText("Usuarios");
        MenuUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuUsuarios.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuUsuarios.setOpaque(true);
        MenuUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuUsuariosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuUsuariosMouseExited(evt);
            }
        });

        MenuTipoUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuTipoUsuario.setText("Tipo de usuarios");
        MenuTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuTipoUsuarioActionPerformed(evt);
            }
        });
        MenuUsuarios.add(MenuTipoUsuario);

        MenuUsuarios2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuUsuarios2.setText("Usuarios");
        MenuUsuarios2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuUsuarios2ActionPerformed(evt);
            }
        });
        MenuUsuarios.add(MenuUsuarios2);

        MenuContraseña.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuContraseña.setText("Cambiar contraseña");
        MenuContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuContraseñaActionPerformed(evt);
            }
        });
        MenuUsuarios.add(MenuContraseña);

        BarraMenu.add(MenuUsuarios);

        MenuGeneral.setBackground(new java.awt.Color(0, 0, 0));
        MenuGeneral.setForeground(new java.awt.Color(255, 255, 255));
        MenuGeneral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Establecimiento.png"))); // NOI18N
        MenuGeneral.setText("Establecimiento");
        MenuGeneral.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuGeneral.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuGeneral.setOpaque(true);
        MenuGeneral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuGeneralMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuGeneralMouseExited(evt);
            }
        });

        MenuDatos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuDatos.setText("Datos del parqueo");
        MenuDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuDatosActionPerformed(evt);
            }
        });
        MenuGeneral.add(MenuDatos);

        MenuTarifas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuTarifas.setText("Precios");
        MenuTarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuTarifasActionPerformed(evt);
            }
        });
        MenuGeneral.add(MenuTarifas);

        MenuVigilancia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuVigilancia.setText("Camara de vigilancia");
        MenuVigilancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVigilanciaActionPerformed(evt);
            }
        });
        MenuGeneral.add(MenuVigilancia);

        MenuNuevoVehiculo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuNuevoVehiculo.setText("Nuevo vehiculo");
        MenuNuevoVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNuevoVehiculoActionPerformed(evt);
            }
        });
        MenuGeneral.add(MenuNuevoVehiculo);

        BarraMenu.add(MenuGeneral);

        MenuParqueo.setBackground(new java.awt.Color(0, 0, 0));
        MenuParqueo.setForeground(new java.awt.Color(255, 255, 255));
        MenuParqueo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Parqueo.png"))); // NOI18N
        MenuParqueo.setText("Parqueo");
        MenuParqueo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuParqueo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuParqueo.setOpaque(true);
        MenuParqueo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuParqueoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuParqueoMouseExited(evt);
            }
        });

        MenuPuestos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuPuestos.setText("Puestos");
        MenuPuestos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPuestosActionPerformed(evt);
            }
        });
        MenuParqueo.add(MenuPuestos);

        MenuParquear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuParquear.setText("Parquear vehiculo");
        MenuParquear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuParquearActionPerformed(evt);
            }
        });
        MenuParqueo.add(MenuParquear);

        MenuRetirar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuRetirar.setText("Retirar vehiculo");
        MenuRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuRetirarActionPerformed(evt);
            }
        });
        MenuParqueo.add(MenuRetirar);

        BarraMenu.add(MenuParqueo);

        MenuAlquiler.setBackground(new java.awt.Color(0, 0, 0));
        MenuAlquiler.setForeground(new java.awt.Color(255, 255, 255));
        MenuAlquiler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Alquiler.png"))); // NOI18N
        MenuAlquiler.setText("Servicio de alquiler");
        MenuAlquiler.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuAlquiler.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuAlquiler.setOpaque(true);
        MenuAlquiler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAlquilerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuAlquilerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuAlquilerMouseExited(evt);
            }
        });
        BarraMenu.add(MenuAlquiler);

        MenuContaduria.setBackground(new java.awt.Color(0, 0, 0));
        MenuContaduria.setForeground(new java.awt.Color(255, 255, 255));
        MenuContaduria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Contaduria.png"))); // NOI18N
        MenuContaduria.setText("Finanzas");
        MenuContaduria.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuContaduria.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuContaduria.setOpaque(true);
        MenuContaduria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuContaduriaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuContaduriaMouseExited(evt);
            }
        });

        MenuGanancia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuGanancia.setText("Ganancias obtenidas");
        MenuGanancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuGananciaActionPerformed(evt);
            }
        });
        MenuContaduria.add(MenuGanancia);

        BarraMenu.add(MenuContaduria);

        MenuReportes.setBackground(new java.awt.Color(0, 0, 0));
        MenuReportes.setForeground(new java.awt.Color(255, 255, 255));
        MenuReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Reportes.png"))); // NOI18N
        MenuReportes.setText("Reportes");
        MenuReportes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuReportes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuReportes.setOpaque(true);
        MenuReportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuReportesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuReportesMouseExited(evt);
            }
        });

        MenuUsuarios3.setText("Usuarios");

        MenuUsuarios4.setText("Usuarios registrados");
        MenuUsuarios4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuUsuarios4ActionPerformed(evt);
            }
        });
        MenuUsuarios3.add(MenuUsuarios4);

        MenuTipoUsuarios2.setText("Tipos de usuarios ingresados");
        MenuTipoUsuarios2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuTipoUsuarios2ActionPerformed(evt);
            }
        });
        MenuUsuarios3.add(MenuTipoUsuarios2);

        MenuHistorial.setText("Historial de inicios de sesión");
        MenuHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuHistorialActionPerformed(evt);
            }
        });
        MenuUsuarios3.add(MenuHistorial);

        MenuReportes.add(MenuUsuarios3);

        MenuClientes.setText("Clientes");

        MenuClientes2.setText("Clientes ingresados al parqueo");
        MenuClientes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuClientes2ActionPerformed(evt);
            }
        });
        MenuClientes.add(MenuClientes2);

        MenuClientes3.setText("Clientes retirados del parqueadero");
        MenuClientes3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuClientes3ActionPerformed(evt);
            }
        });
        MenuClientes.add(MenuClientes3);

        MenuReportes.add(MenuClientes);

        MenuVehiculos.setText("Vehiculos");

        MenuIngresados.setText("Vehiculos livianos");
        MenuIngresados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuIngresadosActionPerformed(evt);
            }
        });
        MenuVehiculos.add(MenuIngresados);

        MenuRetirados.setText("Vehiculos comerciales");
        MenuRetirados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuRetiradosActionPerformed(evt);
            }
        });
        MenuVehiculos.add(MenuRetirados);

        MenuVIP.setText("Vehiculos VIP");
        MenuVIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVIPActionPerformed(evt);
            }
        });
        MenuVehiculos.add(MenuVIP);

        MenuMoto.setText("Motocicletas");
        MenuMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMotoActionPerformed(evt);
            }
        });
        MenuVehiculos.add(MenuMoto);

        MenuTipoVehiculos.setText("Tipo de vehiculos");
        MenuTipoVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuTipoVehiculosActionPerformed(evt);
            }
        });
        MenuVehiculos.add(MenuTipoVehiculos);

        MenuReportes.add(MenuVehiculos);

        MenuFinanzas.setText("Finanzas");

        MenuTotal.setText("Ganacias totales del parqueo");
        MenuTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuTotalActionPerformed(evt);
            }
        });
        MenuFinanzas.add(MenuTotal);

        MenuTotal2.setText("Ganancias totales por alquileres");
        MenuFinanzas.add(MenuTotal2);

        MenuReportes.add(MenuFinanzas);

        BarraMenu.add(MenuReportes);

        MenuInterfaz.setBackground(new java.awt.Color(0, 0, 0));
        MenuInterfaz.setForeground(new java.awt.Color(255, 255, 255));
        MenuInterfaz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Interfaz.png"))); // NOI18N
        MenuInterfaz.setText("Interfaz");
        MenuInterfaz.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuInterfaz.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuInterfaz.setOpaque(true);
        MenuInterfaz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuInterfazMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuInterfazMouseExited(evt);
            }
        });

        MenuArduino.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuArduino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/arduino.png"))); // NOI18N
        MenuArduino.setText("Arduino");
        MenuArduino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuArduinoActionPerformed(evt);
            }
        });
        MenuInterfaz.add(MenuArduino);

        BarraMenu.add(MenuInterfaz);

        MenuBaseDatos.setBackground(new java.awt.Color(0, 0, 0));
        MenuBaseDatos.setForeground(new java.awt.Color(255, 255, 255));
        MenuBaseDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Base.png"))); // NOI18N
        MenuBaseDatos.setText("Base de datos");
        MenuBaseDatos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuBaseDatos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuBaseDatos.setOpaque(true);
        MenuBaseDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuBaseDatosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuBaseDatosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuBaseDatosMouseExited(evt);
            }
        });
        BarraMenu.add(MenuBaseDatos);

        MenuAyuda.setBackground(new java.awt.Color(0, 0, 0));
        MenuAyuda.setForeground(new java.awt.Color(255, 255, 255));
        MenuAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/AcercaDe.png"))); // NOI18N
        MenuAyuda.setText("Otros");
        MenuAyuda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuAyuda.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuAyuda.setOpaque(true);
        MenuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuAyudaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuAyudaMouseExited(evt);
            }
        });

        MenuAutores.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuAutores.setText("Creadores");
        MenuAutores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuAutoresActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuAutores);

        MenuReporte.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuReporte.setText("Reporte técnico");
        MenuReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuReporteActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuReporte);

        MenuMusica.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuMusica.setText("Reproduce tu musica");
        MenuMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMusicaActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuMusica);

        MenuIdioma.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuIdioma.setText("Idioma del sistema");
        MenuIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuIdiomaActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuIdioma);

        MenuServidor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuServidor.setText("Servidor");
        MenuServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuServidorActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuServidor);

        MenuCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuCliente.setText("Cliente");
        MenuCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuClienteActionPerformed(evt);
            }
        });
        MenuAyuda.add(MenuCliente);

        BarraMenu.add(MenuAyuda);

        MenuSesion.setBackground(new java.awt.Color(0, 0, 0));
        MenuSesion.setForeground(new java.awt.Color(255, 255, 255));
        MenuSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Sesion.png"))); // NOI18N
        MenuSesion.setText("Cerrar sesión");
        MenuSesion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuSesion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuSesion.setOpaque(true);
        MenuSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuSesionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuSesionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuSesionMouseExited(evt);
            }
        });
        BarraMenu.add(MenuSesion);

        MenuSalir.setBackground(new java.awt.Color(0, 0, 0));
        MenuSalir.setForeground(new java.awt.Color(255, 255, 255));
        MenuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Diseño/Salir.png"))); // NOI18N
        MenuSalir.setText("Salir");
        MenuSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MenuSalir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        MenuSalir.setOpaque(true);
        MenuSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuSalirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MenuSalirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuSalirMouseExited(evt);
            }
        });
        BarraMenu.add(MenuSalir);

        jMenu2.setBackground(new java.awt.Color(0, 0, 0));
        jMenu2.setText(" ᅝᅝᅝ");
        jMenu2.setOpaque(true);
        BarraMenu.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(0, 0, 0));
        jMenu3.setText(" ᅝᅝᅝ");
        jMenu3.setOpaque(true);
        BarraMenu.add(jMenu3);

        jMenu4.setBackground(new java.awt.Color(0, 0, 0));
        jMenu4.setText(" ᅝᅝᅝᅝ");
        jMenu4.setOpaque(true);
        BarraMenu.add(jMenu4);

        setJMenuBar(BarraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuTipoUsuarioActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT usuarios FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmTipoUsuarios obj = new FrmTipoUsuarios(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuTipoUsuarioActionPerformed

    private void MenuUsuarios2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuUsuarios2ActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT usuarios FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmUsuarios obj = new FrmUsuarios(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuUsuarios2ActionPerformed

    private void MenuDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuDatosActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT establecimiento FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmDatosParqueo obj = new FrmDatosParqueo(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuDatosActionPerformed

    private void MenuTarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuTarifasActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT establecimiento FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmPrecios obj = new FrmPrecios(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuTarifasActionPerformed

    private void MenuContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuContraseñaActionPerformed
        FrmCambiarContraseña obj = new FrmCambiarContraseña(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuContraseñaActionPerformed

    private void MenuPuestosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPuestosActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT parqueo FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmPuestos obj = new FrmPuestos(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuPuestosActionPerformed

    private void MenuSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSesionMouseClicked
        if (JOptionPane.showConfirmDialog(this, "¿Desea cerrar la sesión de " + ClsSQLQuery.ProNombreUsuario + "?", "Atención", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            FrmSesión obj = new FrmSesión();
            dispose();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_MenuSesionMouseClicked

    private void MenuSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSalirMouseClicked
        if (JOptionPane.showConfirmDialog(null, "¿Desea salir del sistema?", "AVISO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_MenuSalirMouseClicked

    private void MenuArduinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuArduinoActionPerformed
        FrmTipoUsoArduino obj = new FrmTipoUsoArduino(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuArduinoActionPerformed

    private void MenuParquearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuParquearActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT parqueo FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmParquear obj = new FrmParquear(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuParquearActionPerformed

    private void MenuRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuRetirarActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT parqueo FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmRetirar obj = new FrmRetirar(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuRetirarActionPerformed

    private void MenuGananciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuGananciaActionPerformed
        boolean permiso = false;
        try {
            PreparedStatement st = cn.prepareCall("SELECT contaduria FROM tipo_usuario WHERE codigo_tipo_usuario = ?");
            st.setInt(1, ClsSQLQuery.ProTipoUsuario);
            ResultSet rs = st.executeQuery();
            rs.next();
            if(rs.getRow() == 1){
                permiso = rs.getBoolean(1);
            }
        }catch(SQLException e){System.out.println(e);}
        if(permiso){
            FrmGanancias obj = new FrmGanancias(this, true);
            obj.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Su cuenta no tiene suficientes privilegios para ingresar a este formulario", "AVISO", JOptionPane.CANCEL_OPTION);
        }
    }//GEN-LAST:event_MenuGananciaActionPerformed

    private void MenuAlquilerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAlquilerMouseClicked
        FrmAlquiler obj = new FrmAlquiler(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuAlquilerMouseClicked

    private void MenuUsuariosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuUsuariosMouseEntered
        MenuUsuarios.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuUsuariosMouseEntered

    private void MenuUsuariosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuUsuariosMouseExited
        MenuUsuarios.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuUsuariosMouseExited

    private void MenuGeneralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuGeneralMouseEntered
        MenuGeneral.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuGeneralMouseEntered

    private void MenuParqueoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuParqueoMouseEntered
        MenuParqueo.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuParqueoMouseEntered

    private void MenuAlquilerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAlquilerMouseEntered
        MenuAlquiler.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuAlquilerMouseEntered

    private void MenuContaduriaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuContaduriaMouseEntered
        MenuContaduria.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuContaduriaMouseEntered

    private void MenuReportesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuReportesMouseEntered
        MenuReportes.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuReportesMouseEntered

    private void MenuInterfazMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuInterfazMouseEntered
        MenuInterfaz.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuInterfazMouseEntered

    private void MenuSesionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSesionMouseEntered
        MenuSesion.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuSesionMouseEntered

    private void MenuSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSalirMouseEntered
        MenuSalir.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuSalirMouseEntered

    private void MenuGeneralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuGeneralMouseExited
        MenuGeneral.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuGeneralMouseExited

    private void MenuParqueoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuParqueoMouseExited
        MenuParqueo.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuParqueoMouseExited

    private void MenuAlquilerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAlquilerMouseExited
        MenuAlquiler.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuAlquilerMouseExited

    private void MenuContaduriaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuContaduriaMouseExited
        MenuContaduria.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuContaduriaMouseExited

    private void MenuReportesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuReportesMouseExited
        MenuReportes.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuReportesMouseExited

    private void MenuInterfazMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuInterfazMouseExited
        MenuInterfaz.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuInterfazMouseExited

    private void MenuSesionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSesionMouseExited
        MenuSesion.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuSesionMouseExited

    private void MenuSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuSalirMouseExited
        MenuSalir.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuSalirMouseExited

    private void MenuBaseDatosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBaseDatosMouseEntered
        MenuBaseDatos.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuBaseDatosMouseEntered

    private void MenuBaseDatosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBaseDatosMouseExited
        MenuBaseDatos.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuBaseDatosMouseExited

    private void MenuBaseDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBaseDatosMouseClicked
        FrmBaseDatos obj = new FrmBaseDatos(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuBaseDatosMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        IniciarConexion();
        SlideShow();
        FrmIntro.hilo.stop();
    }//GEN-LAST:event_formWindowOpened

    private void lblfondo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblfondo1MouseClicked
        if (evt.getButton() == 3)
        {
            MenuEmergente.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_lblfondo1MouseClicked

    private void MenuSesion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSesion2ActionPerformed
        if (JOptionPane.showConfirmDialog(this, "¿Desea cerrar la sesión de " + ClsSQLQuery.ProNombreUsuario + "?", "Atención", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            FrmSesión obj = new FrmSesión();
            dispose();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_MenuSesion2ActionPerformed

    private void MenuMinimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMinimizarActionPerformed
        setExtendedState(1);
    }//GEN-LAST:event_MenuMinimizarActionPerformed

    private void MenuSalir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSalir2ActionPerformed
        if (JOptionPane.showConfirmDialog(null, "¿Desea salir del sistema?", "AVISO", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_MenuSalir2ActionPerformed

    private void MenuUsuarios4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuUsuarios4ActionPerformed
        MostrarUsuarios();
    }//GEN-LAST:event_MenuUsuarios4ActionPerformed

    private void MenuTipoUsuarios2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuTipoUsuarios2ActionPerformed
        MostrarTipoUsuarios();
    }//GEN-LAST:event_MenuTipoUsuarios2ActionPerformed

    private void MenuHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuHistorialActionPerformed
        FrmHistorial obj = new FrmHistorial(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuHistorialActionPerformed

    private void MenuClientes2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuClientes2ActionPerformed
        MostrarClientesIngresados();
    }//GEN-LAST:event_MenuClientes2ActionPerformed

    private void MenuClientes3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuClientes3ActionPerformed
        MostrarClientesRetirados();
    }//GEN-LAST:event_MenuClientes3ActionPerformed

    private void MenuIngresadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuIngresadosActionPerformed
        MostrarLivianos();
    }//GEN-LAST:event_MenuIngresadosActionPerformed

    private void MenuRetiradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuRetiradosActionPerformed
        MostrarComerciales();
    }//GEN-LAST:event_MenuRetiradosActionPerformed

    private void MenuVIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVIPActionPerformed
        MostrarVIP();
    }//GEN-LAST:event_MenuVIPActionPerformed

    private void MenuMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMotoActionPerformed
        MostrarMotos();
    }//GEN-LAST:event_MenuMotoActionPerformed

    private void MenuTipoVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuTipoVehiculosActionPerformed
        MostrarTipoVehiculos();
    }//GEN-LAST:event_MenuTipoVehiculosActionPerformed

    private void MenuTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuTotalActionPerformed
        GananciaFecha();
    }//GEN-LAST:event_MenuTotalActionPerformed

    private void MenuAutoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuAutoresActionPerformed
        FrmAbout obj = new FrmAbout(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuAutoresActionPerformed

    private void MenuAyudaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAyudaMouseEntered
        MenuAyuda.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MenuAyudaMouseEntered

    private void MenuAyudaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAyudaMouseExited
        MenuAyuda.setForeground(new java.awt.Color(255,255,255));
    }//GEN-LAST:event_MenuAyudaMouseExited

    private void MenuMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMusicaActionPerformed
        FrmReproductorMP3 obj = new FrmReproductorMP3(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuMusicaActionPerformed

    private void MenuNuevoVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNuevoVehiculoActionPerformed
        FrmTipoVehiculos obj = new FrmTipoVehiculos(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuNuevoVehiculoActionPerformed

    private void MenuIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuIdiomaActionPerformed
        FrmIdioma obj = new FrmIdioma(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuIdiomaActionPerformed

    private void MenuServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuServidorActionPerformed
        FrmServidor obj = new FrmServidor(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuServidorActionPerformed

    private void MenuClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuClienteActionPerformed
        FrmCliente obj = new FrmCliente(this, true);
        obj.setVisible(true);
    }//GEN-LAST:event_MenuClienteActionPerformed

    private void MenuReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuReporteActionPerformed
        try {
            File path = new File ("E://LGP/Periodo I/Recursos/imagenes/EasyParkingSystem/PTC Final.pdf");
            Desktop.getDesktop().open(path);
        }catch (IOException ex) {
        }
    }//GEN-LAST:event_MenuReporteActionPerformed

    private void MenuVigilanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVigilanciaActionPerformed
        ImageIcon image = new FrmVigilancia(null, true).getImagen();
        if(!(image == null)){
        int w = image.getIconWidth();
        int h = image.getIconHeight();
        }
        else{
        }
    }//GEN-LAST:event_MenuVigilanciaActionPerformed

    public void SlideShow(){
        new Thread(){
            int count;
            @Override
            public void run(){
                try {
                    while(true){
                        switch(count){
                            case 0:
                                ImageIcon II = new ImageIcon(getClass().getResource("/Diseño/Principal2.jpg"));
                                lblfondo1.setIcon(II);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 1;
                                break;
                                
                            case 1:
                                ImageIcon II2 = new ImageIcon(getClass().getResource("/Diseño/Principal.jpg"));
                                lblfondo.setIcon(II2);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 2;
                                break;
                                
                            case 2:
                                Thread.sleep(7000);
                                ImageIcon II3 = new ImageIcon(getClass().getResource("/Diseño/Principal3.jpg"));
                                lblfondo1.setIcon(II3);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 3;
                                break;
                                
                            case 3:
                                Thread.sleep(7000);
                                ImageIcon II4 = new ImageIcon(getClass().getResource("/Diseño/Principal4.jpg"));
                                lblfondo.setIcon(II4);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 4;
                                break;
                                
                            case 4:
                                Thread.sleep(7000);
                                ImageIcon II5 = new ImageIcon(getClass().getResource("/Diseño/Principal5.jpg"));
                                lblfondo1.setIcon(II5);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 5;
                                break;
                                
                            case 5:
                                Thread.sleep(7000);
                                ImageIcon II6 = new ImageIcon(getClass().getResource("/Diseño/Principal6.jpg"));
                                lblfondo.setIcon(II6);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 6;
                                break;
                                
                            case 6:
                                Thread.sleep(7000);
                                ImageIcon II7 = new ImageIcon(getClass().getResource("/Diseño/Principal7.jpg"));
                                lblfondo1.setIcon(II7);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 7;
                                break;
                                
                            case 7:
                                Thread.sleep(7000);
                                ImageIcon II8 = new ImageIcon(getClass().getResource("/Diseño/Principal8.jpg"));
                                lblfondo.setIcon(II8);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 8;
                                break;
                                
                            case 8:
                                Thread.sleep(7000);
                                ImageIcon II9 = new ImageIcon(getClass().getResource("/Diseño/Principal9.jpg"));
                                lblfondo1.setIcon(II9);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 9;
                                break;
                                
                            case 9:
                                Thread.sleep(7000);
                                ImageIcon II10 = new ImageIcon(getClass().getResource("/Diseño/Principal10.jpg"));
                                lblfondo.setIcon(II10);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 10;
                                break;
                                
                           case 10:
                                Thread.sleep(7000);
                                ImageIcon II11 = new ImageIcon(getClass().getResource("/Diseño/Principal11.jpg"));
                                lblfondo1.setIcon(II11);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 11;
                                break;
                               
                          case 11:
                                Thread.sleep(7000);
                                ImageIcon II12 = new ImageIcon(getClass().getResource("/Diseño/Principal12.jpg"));
                                lblfondo.setIcon(II12);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 12;
                                break;
                              
                         case 12:
                                Thread.sleep(7000);
                                ImageIcon II13 = new ImageIcon(getClass().getResource("/Diseño/Principal13.jpg"));
                                lblfondo1.setIcon(II13);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 13;
                                break;
                             
                         case 13:
                                Thread.sleep(7000);
                                ImageIcon II14 = new ImageIcon(getClass().getResource("/Diseño/Principal14.jpg"));
                                lblfondo1.setIcon(II14);
                                Thread.sleep(3000);
                                AC.jLabelXRight(-1366, 0, 20, 2, lblfondo1);
                                AC.jLabelXRight(0, 1366, 20, 2, lblfondo);
                                count = 14;
                                break;
                             
                        case 14:
                                Thread.sleep(7000);
                                ImageIcon II15 = new ImageIcon(getClass().getResource("/Diseño/Principal15.jpg"));
                                lblfondo1.setIcon(II15);
                                Thread.sleep(3000);
                                AC.jLabelXLeft(0, -1366, 20, 2, lblfondo1);
                                AC.jLabelXLeft(1366, 0, 20, 2, lblfondo);
                                count = 0;
                                break;
                        }
                    }
                } catch (InterruptedException e) {System.out.println(e);}
            }
    }.start();
                }
    
    public void Cambiar(){
        new Thread(){
            int count;
            @Override
            public void run(){
                try {
                    while(true){
                        switch(count){
                            case 0:
                                Thread.sleep(10000);
                                ImageIcon II = new ImageIcon(getClass().getResource("/Diseño/Principal2.jpg"));
                                lblfondo1.setIcon(II);
                                count = 1;
                                break;
                                
                            case 1:
                                Thread.sleep(10000);
                                ImageIcon II2 = new ImageIcon(getClass().getResource("/Diseño/Principal.jpg"));
                                lblfondo1.setIcon(II2);
                                count = 2;
                                break;
                                
                            case 2:
                                Thread.sleep(10000);
                                ImageIcon II3 = new ImageIcon(getClass().getResource("/Diseño/Principal3.jpg"));
                                lblfondo1.setIcon(II3);
                                count = 3;
                                break;
                                
                            case 3:
                                Thread.sleep(10000);
                                ImageIcon II4 = new ImageIcon(getClass().getResource("/Diseño/Principal4.jpg"));
                                lblfondo1.setIcon(II4);
                                count = 4;
                                break;
                                
                            case 4:
                                Thread.sleep(10000);
                                ImageIcon II5 = new ImageIcon(getClass().getResource("/Diseño/Principal5.jpg"));
                                lblfondo1.setIcon(II5);
                                count = 5;
                                break;
                                
                            case 5:
                                Thread.sleep(10000);
                                ImageIcon II6 = new ImageIcon(getClass().getResource("/Diseño/Principal6.jpg"));
                                lblfondo1.setIcon(II6);
                                count = 6;
                                break;
                                
                            case 6:
                                Thread.sleep(10000);
                                ImageIcon II7 = new ImageIcon(getClass().getResource("/Diseño/Principal7.jpg"));
                                lblfondo1.setIcon(II7);
                                count = 7;
                                break;
                                
                            case 7:
                                Thread.sleep(10000);
                                ImageIcon II8 = new ImageIcon(getClass().getResource("/Diseño/Principal8.jpg"));
                                lblfondo1.setIcon(II8);
                                count = 8;
                                break;
                                
                            case 8:
                                Thread.sleep(10000);
                                ImageIcon II9 = new ImageIcon(getClass().getResource("/Diseño/Principal9.jpg"));
                                lblfondo1.setIcon(II9);
                                count = 9;
                                break;
                                
                            case 9:
                                Thread.sleep(10000);
                                ImageIcon II10 = new ImageIcon(getClass().getResource("/Diseño/Principal10.jpg"));
                                lblfondo1.setIcon(II10);
                                count = 0;
                                break;
                        }
                    }
                } catch (InterruptedException e) {System.out.println(e);}
            }
    }.start();
                }
    
    void MostrarUsuarios(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/Usuarios.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Usuarios registrados");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarLivianos(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/VehiculosLivianos.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Vehiculos livianos registrados");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarTipoUsuarios(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/TipoUsuarios.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Tipo de usuarios registrados");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarClientesIngresados(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/ClientesDentro.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Clientes ingresados al parqueadero");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarClientesRetirados(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/ClientesRetirados.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuarios", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Clientes retirados del parqueadero");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarComerciales(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/VehiculosComerciales.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Vehiculos comerciales registrados");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarTipoVehiculos(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/TipoVehiculos.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Tipo de vehiculos");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarVIP(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/VehiculosVIP.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Vehiculos VIP registrados");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void MostrarMotos(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/Motocicletas.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Motocicletas registradas");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    void GananciaFecha(){
        String path = null;
        try {
            path = getClass().getResource("/Reportes/GananciaFecha.jasper").getPath();
            path = URLDecoder.decode(path, "UTF-8");
            Map parametros = new HashMap();
            parametros.put("Nombres", ClsSQLQuery.ProNombresUsuario);
            parametros.put("Apellidos", ClsSQLQuery.ProApellidosUsuario);
            parametros.put("Usuario", ClsSQLQuery.ProNombreUsuario);
            JasperReport reporte = (JasperReport)JRLoader.loadObject(path);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, parametros, cn);
            JasperViewer visor = new JasperViewer(imprimir, false);
            visor.setTitle("Ganancias por fecha");
            visor.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
            visor.setVisible(true);
        } catch (UnsupportedEncodingException | JRException e) {
        }
    }
    
    public void IniciarConexion(){
        CommPortIdentifier PuertoID = null;
        Enumeration PuertoEnum = CommPortIdentifier.getPortIdentifiers();
        while(PuertoEnum.hasMoreElements()){
            CommPortIdentifier ActualPuertoID = (CommPortIdentifier) PuertoEnum.nextElement();
            if(puerto.equals(ActualPuertoID.getName())){
                PuertoID = ActualPuertoID;
                break;
            }
        }
        if(PuertoID == null){
            JOptionPane.showMessageDialog(null, "!El Arduino no esta conectado¡" + "\nPor lo tanto no podra usar todas sus funciones", "Atención", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        try {
            PuertoSerie = (SerialPort) PuertoID.open(this.getClass().getName(), TimeOut);
            PuertoSerie.setSerialPortParams(DateRate, SerialPort.DATABITS_8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
            salida = PuertoSerie.getOutputStream();
        } catch (PortInUseException | UnsupportedCommOperationException | IOException e) {}
        }
    }
    
    void IdiomaEspañol(){
        FrmPrincipal.MenuUsuarios.setText("Usuarios");
        FrmPrincipal.MenuTipoUsuario.setText("Tipo de usuarios");
        FrmPrincipal.MenuUsuarios2.setText("Usuarios");
        FrmPrincipal.MenuContaduria.setText("Cambiar contraseña");
        FrmPrincipal.MenuGeneral.setText("Establecimiento");
        FrmPrincipal.MenuDatos.setText("Datos del parqueo");
        FrmPrincipal.MenuTarifas.setText("Precios");
        FrmPrincipal.MenuNuevoVehiculo.setText("Nuevo vehiculo");
        FrmPrincipal.MenuParqueo.setText("Parqueo");
        FrmPrincipal.MenuPuestos.setText("Puestos");
        FrmPrincipal.MenuParquear.setText("Parquear vehiculo");
        FrmPrincipal.MenuRetirar.setText("Retirar vehiculo");
        FrmPrincipal.MenuAlquiler.setText("Servicio de alquiler");
        FrmPrincipal.MenuContaduria.setText("Finanzas");
        FrmPrincipal.MenuGanancia.setText("Ganancias obtenidas");
        FrmPrincipal.MenuReportes.setText("Reportes");
        FrmPrincipal.MenuUsuarios3.setText("Usuarios");
        FrmPrincipal.MenuUsuarios4.setText("Usuarios registrados");
        FrmPrincipal.MenuTipoUsuarios2.setText("Tipos de usuarios registrados");
        FrmPrincipal.MenuHistorial.setText("Historial de inicios de sesión");
        FrmPrincipal.MenuClientes.setText("Clientes");
        FrmPrincipal.MenuClientes2.setText("Clientes ingresados al parqueo");
        FrmPrincipal.MenuClientes3.setText("Clientes retirados del parqueo");
        FrmPrincipal.MenuVehiculos.setText("Vehiculos");
        FrmPrincipal.MenuIngresados.setText("Vehiculos livianos");
        FrmPrincipal.MenuRetirados.setText("Vehiculos comerciales");
        FrmPrincipal.MenuVIP.setText("vehiculos VIP");
        FrmPrincipal.MenuMoto.setText("Motocicletas");
        FrmPrincipal.MenuTipoVehiculos.setText("Tipos de vehiculos");
        FrmPrincipal.MenuFinanzas.setText("Finanzas");
        FrmPrincipal.MenuTotal.setText("Ganancias totales del parqueo");
        FrmPrincipal.MenuTotal2.setText("Ganancias totales del alquiler");
        FrmPrincipal.MenuInterfaz.setText("Interfaz");
        FrmPrincipal.MenuBaseDatos.setText("Base de datos");
        FrmPrincipal.MenuAyuda.setText("Otros");
        FrmPrincipal.MenuAutores.setText("Creadores");
        FrmPrincipal.MenuReporte.setText("Reporte tecnico");
        FrmPrincipal.MenuMusica.setText("Reproduce tu musica");
        FrmPrincipal.MenuIdioma.setText("Idioma del sistema");
        FrmPrincipal.MenuSesion.setText("Cerrar sesión");
        FrmPrincipal.MenuSalir.setText("Salir");
    }
    
    void IdiomaEnglish(){
        FrmPrincipal.MenuUsuarios.setText("Users");
        FrmPrincipal.MenuTipoUsuario.setText("Type of user");
        FrmPrincipal.MenuUsuarios2.setText("Users");
        FrmPrincipal.MenuContaduria.setText("Change password");
        FrmPrincipal.MenuGeneral.setText("Establishment");
        FrmPrincipal.MenuDatos.setText("Details parking");
        FrmPrincipal.MenuTarifas.setText("Prices");
        FrmPrincipal.MenuNuevoVehiculo.setText("New vehicle");
        FrmPrincipal.MenuParqueo.setText("Parking");
        FrmPrincipal.MenuPuestos.setText("Places");
        FrmPrincipal.MenuParquear.setText("Vehicle parking");
        FrmPrincipal.MenuRetirar.setText("Remove Vehicle");
        FrmPrincipal.MenuAlquiler.setText("Rental Service");
        FrmPrincipal.MenuContaduria.setText("Finance");
        FrmPrincipal.MenuGanancia.setText("Gains");
        FrmPrincipal.MenuReportes.setText("Reports");
        FrmPrincipal.MenuUsuarios3.setText("Users");
        FrmPrincipal.MenuUsuarios4.setText("Registered users");
        FrmPrincipal.MenuTipoUsuarios2.setText("Types of users registered");
        FrmPrincipal.MenuHistorial.setText("History of logins");
        FrmPrincipal.MenuClientes.setText("Client");
        FrmPrincipal.MenuClientes2.setText("Client entered in the parking");
        FrmPrincipal.MenuClientes3.setText("Client remove of the parking");
        FrmPrincipal.MenuVehiculos.setText("Vehicle");
        FrmPrincipal.MenuIngresados.setText("Light vehicles");
        FrmPrincipal.MenuRetirados.setText("Commercial vehicles");
        FrmPrincipal.MenuVIP.setText("VIP vehicles");
        FrmPrincipal.MenuMoto.setText("Motorcycles");
        FrmPrincipal.MenuTipoVehiculos.setText("Types of vehicles");
        FrmPrincipal.MenuFinanzas.setText("Finance");
        FrmPrincipal.MenuTotal.setText("Total gains of the parking");
        FrmPrincipal.MenuTotal2.setText("Total gains of rent");
        FrmPrincipal.MenuInterfaz.setText("Interface");
        FrmPrincipal.MenuBaseDatos.setText("DataBase");
        FrmPrincipal.MenuAyuda.setText("Others");
        FrmPrincipal.MenuAutores.setText("Creators");
        FrmPrincipal.MenuReporte.setText("Technical report");
        FrmPrincipal.MenuMusica.setText("Play your music");
        FrmPrincipal.MenuIdioma.setText("System Language");
        FrmPrincipal.MenuSesion.setText("Sign off");
        FrmPrincipal.MenuSalir.setText("Exit");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JMenuBar BarraMenu;
    public static javax.swing.JMenu MenuAlquiler;
    private javax.swing.JMenuItem MenuArduino;
    public static javax.swing.JMenuItem MenuAutores;
    public static javax.swing.JMenu MenuAyuda;
    public static javax.swing.JMenu MenuBaseDatos;
    private javax.swing.JMenuItem MenuCliente;
    public static javax.swing.JMenu MenuClientes;
    public static javax.swing.JMenuItem MenuClientes2;
    public static javax.swing.JMenuItem MenuClientes3;
    public static javax.swing.JMenu MenuContaduria;
    public static javax.swing.JMenuItem MenuContraseña;
    public static javax.swing.JMenuItem MenuDatos;
    private javax.swing.JPopupMenu MenuEmergente;
    public static javax.swing.JMenu MenuFinanzas;
    public static javax.swing.JMenuItem MenuGanancia;
    public static javax.swing.JMenu MenuGeneral;
    public static javax.swing.JMenuItem MenuHistorial;
    public static javax.swing.JMenuItem MenuIdioma;
    public static javax.swing.JMenuItem MenuIngresados;
    public static javax.swing.JMenu MenuInterfaz;
    private javax.swing.JMenuItem MenuMinimizar;
    public static javax.swing.JMenuItem MenuMoto;
    public static javax.swing.JMenuItem MenuMusica;
    public static javax.swing.JMenuItem MenuNuevoVehiculo;
    public static javax.swing.JMenuItem MenuParquear;
    public static javax.swing.JMenu MenuParqueo;
    public static javax.swing.JMenuItem MenuPuestos;
    public static javax.swing.JMenuItem MenuReporte;
    public static javax.swing.JMenu MenuReportes;
    public static javax.swing.JMenuItem MenuRetirados;
    public static javax.swing.JMenuItem MenuRetirar;
    public static javax.swing.JMenu MenuSalir;
    private javax.swing.JMenuItem MenuSalir2;
    private javax.swing.JMenuItem MenuServidor;
    public static javax.swing.JMenu MenuSesion;
    private javax.swing.JMenuItem MenuSesion2;
    public static javax.swing.JMenuItem MenuTarifas;
    public static javax.swing.JMenuItem MenuTipoUsuario;
    public static javax.swing.JMenuItem MenuTipoUsuarios2;
    public static javax.swing.JMenuItem MenuTipoVehiculos;
    public static javax.swing.JMenuItem MenuTotal;
    public static javax.swing.JMenuItem MenuTotal2;
    public static javax.swing.JMenu MenuUsuarios;
    public static javax.swing.JMenuItem MenuUsuarios2;
    public static javax.swing.JMenu MenuUsuarios3;
    public static javax.swing.JMenuItem MenuUsuarios4;
    public static javax.swing.JMenuItem MenuVIP;
    public static javax.swing.JMenu MenuVehiculos;
    private javax.swing.JMenuItem MenuVigilancia;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JLabel lblfondo;
    private javax.swing.JLabel lblfondo1;
    // End of variables declaration//GEN-END:variables
ClsConexion cc= new ClsConexion();
Connection cn= cc.conectar();
}
