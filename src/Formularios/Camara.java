/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Formularios;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author Will
 */
public class Camara extends javax.swing.JDialog {
Timer timer;
Webcam cam;
ImageIcon imagen = null;

    /**
     * Creates new form Camara
     * @param parent
     * @param modal
     */

    public Camara(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        timer = new Timer(30, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                refrescarCamara();
            }
        });
        try {
            cam = Webcam.getDefault();
            cam.open();
            timer.start();
        } catch (WebcamException ex) {
            JOptionPane.showMessageDialog(null, "No se puede acceder a la cámara en este momento...", "AVISO", JOptionPane.CANCEL_OPTION);
            this.dispose();
        }
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Fotografia");
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Diseño/Icono.png"));
        setIconImage(icon);
        ((JPanel)getContentPane()).setOpaque(false); 
        ImageIcon uno=new ImageIcon(this.getClass().getResource("/Diseño/Camara.jpg")); 
        JLabel fondo= new JLabel(); fondo.setIcon(uno); 
        getLayeredPane().add(fondo,JLayeredPane.FRAME_CONTENT_LAYER); 
        fondo.setBounds(0,0,uno.getIconWidth(),uno.getIconHeight());
    }
    
    /**
     *
     * @return
     */
    
    public ImageIcon getImagen() {
        setVisible(true);
        return imagen;
    }
    
    private void refrescarCamara() {
        BufferedImage image = cam.getImage();
        if(!(image == null)){
        Image img = image.getScaledInstance(500, 358, Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(img);
        lblCam.setIcon(icon);
        }
        else{
            timer.stop();
            JOptionPane.showMessageDialog(this, "No se cargo la imagen porque no te tomaste la foto", "AVISO", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCam = new javax.swing.JLabel();
        BtnCapturar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblCam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 255)));

        BtnCapturar.setBackground(new java.awt.Color(0, 0, 0));
        BtnCapturar.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        BtnCapturar.setForeground(new java.awt.Color(255, 255, 255));
        BtnCapturar.setText("Capturar");
        BtnCapturar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        BtnCapturar.setContentAreaFilled(false);
        BtnCapturar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnCapturar.setFocusable(false);
        BtnCapturar.setOpaque(true);
        BtnCapturar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnCapturarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnCapturarMouseExited(evt);
            }
        });
        BtnCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCapturarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCam, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                    .addComponent(BtnCapturar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCam, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnCapturar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        cam.close();
    }//GEN-LAST:event_formWindowClosing

    private void BtnCapturarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCapturarMouseEntered
        BtnCapturar.setForeground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_BtnCapturarMouseEntered

    private void BtnCapturarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCapturarMouseExited
        BtnCapturar.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_BtnCapturarMouseExited

    private void BtnCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCapturarActionPerformed
        timer.stop();
        if (JOptionPane.showConfirmDialog(null, "¿Usar esta foto de perfil?", "AVISO", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            imagen = (ImageIcon) lblCam.getIcon();
            cam.close();
            dispose();
        } else {
            timer.start();
        }
    }//GEN-LAST:event_BtnCapturarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCapturar;
    private javax.swing.JLabel lblCam;
    // End of variables declaration//GEN-END:variables
}
